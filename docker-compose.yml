version: '2'

volumes:
  prometheus_data: {}
  grafana_data: {}
  mysql_data: {}

services:

# Prometheus + Grafana

  # @link https://grafana.com/docs/grafana-cloud/quickstart/docker-compose-linux/
  # works on Linux(WSL2)
  node-exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus:v2.32.1
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    environment:
      TZ: ${TZ-Asia/Tokyo}
    depends_on:
      - node-exporter

  grafana:
    image: grafana/grafana:8.3.4
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana

# locust

  locust:
    image: locustio/locust:2.7.2
    ports:
      - '8089:8089'
    expose:
      - 5557
    volumes:
      - ./locust:/mnt/locust:ro
    command: -f /mnt/locust/locustfile.py --master
    depends_on:
      - locust-worker

  locust-worker:
    image: locustio/locust:2.7.2
    volumes:
      - ./locust:/mnt/locust:ro
    command: -f /mnt/locust/locustfile.py --worker --master-host=locust --master-port=5557

# app runtime

# Laravel 01 Apache

  laravel-01-apache:
    build:
      context: laravel
      dockerfile: ../docker/laravel-01-apache/Dockerfile
    ports:
      - '8080:80'
    env_file:
      - .env.laravel-01-apache
    depends_on:
      - mysql
      - redis
    mem_limit: 1024m
    cpus: 1.0

# Laravel 02 FPM

  laravel-02-fpm:
    build:
      context: laravel
      dockerfile: ../docker/laravel-02-fpm/Dockerfile
    expose:
      - 9000
    env_file:
      - .env.laravel-02-fpm
    depends_on:
      - mysql
      - redis
    mem_limit: 768m
    cpus: 0.7

  laravel-02-fpm-nginx:
    image: nginx:1.20.2-alpine
    volumes:
      - laravel/laravel.nginx.conf:/etc/nginx/conf.d/laravel.conf:ro
    ports:
      - '8081:80'
    mem_limit: 256m
    cpus: 0.3
    depends_on:
      - laravel-02-fpm

# Laravel 03 nginxunit

  # @link https://unit.nginx.org/howto/laravel/
  laravel-03-nginxunit:
    build:
      context: laravel
      dockerfile: ../docker/laravel-03-nginxunit/Dockerfile
    env_file:
      - .env.laravel-03-nginxunit
    depends_on:
      - mysql
      - redis
    mem_limit: 1024m
    cpus: 1.0

# Laravel 04 RR

  laravel-04-rr:
    build:
      context: laravel
      dockerfile: ../docker/laravel-04-rr/Dockerfile
    env_file:
      - .env.laravel-04-rr
    depends_on:
      - mysql
      - redis
    mem_limit: 1024m
    cpus: 1.0

# app backend

  mysql:
    image: mysql:8.0.28
    ports:
      - 3306
    volumes:
      - ${APP_PATH-.}/docker/mysql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      TZ: ${TZ-Asia/Tokyo}
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --default-time-zone=Asia/Tokyo

  redis:
    image: redis:6.0.16-alpine
    ports:
      - 6379
    environment:
      TZ: ${TZ-Asia/Tokyo}
